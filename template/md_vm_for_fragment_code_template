package ${PACKAGE_NAME}

import android.arch.lifecycle.ViewModel
import android.arch.lifecycle.ViewModelProvider
import android.databinding.ObservableArrayList
import android.databinding.ObservableField
import android.view.View
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.commonservice.data.DatamanagerHelper
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.commonservice.util.ToastUtil
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.${MODULE_NAME}.R
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.${MODULE_NAME}.page.base.ObserableViewModel
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.${MODULE_NAME}.page.xsk.ui.${LINK_NAME}Fragment
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.${MODULE_NAME}.tmp.DemoUtil
import io.ditclear.bindingadapter.ItemClickPresenter
import io.ditclear.bindingadapter.SingleTypeAdapter

class ${LINK_NAME}ViewModel(private val datamanagerHelper: DatamanagerHelper, private var mView: ${LINK_NAME}Fragment) :
        ObserableViewModel() {

    //region onClick method

    override fun onSingleClick(v: View) {
        when (v.id) {

        }
    }

    //endregion

    //region other method

    fun getHttpDatas() {

    }

    fun getX(page: Int) {

    }

    fun initData(pageType: Int) {
        titleName.set("")
        leftStatus.set(false)
        rightStatus.set(false)
        getListDatas(pageType)
    }

    fun getListDatas(page: Int) {
    }

    //endregion

    //region all variable

    //region dataBind variable

    val xx = ObservableField<String>()

    //endregion

    //region declare variable

    //endregion

    //endregion
}

class ${LINK_NAME}ViewModelFactory(private val mView: ${LINK_NAME}Fragment, private val datamanagerHelper: DatamanagerHelper) :
        ViewModelProvider.NewInstanceFactory() {

    override fun <T : ViewModel?> create(modelClass: Class<T>): T {
        if (modelClass.isAssignableFrom(${LINK_NAME}ViewModel::class.java)) {
            return ${LINK_NAME}ViewModel(datamanagerHelper, mView) as T
        }
        throw IllegalArgumentException("Unknown ViewModel class")
    }
}