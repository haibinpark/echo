package ${PACKAGE_NAME}


import androidx.databinding.ObservableField
import androidx.lifecycle.ViewModel
import androidx.lifecycle.ViewModelProvider
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.data.DatamanagerHelper
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.R
import android.view.View
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.ui.${PRE_PATH}.${LINK_NAME}Activity
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.ui.base.domain.ObserableViewModel

class ${NAME}(private val datamanagerHelper: DatamanagerHelper, private var mView: ${LINK_NAME}Activity) : ObserableViewModel() {

    //region onClick method

    override fun onSingleClick(v: View) {
        when (v.id) {
            R.id.iv_back -> mView.onBackPressedSupport()
        }
    }

    //endregion

    //region other method

    fun getHttpDatas() {

    }
    
    

    fun getX(page: Int) {
        
    }

    //endregion

    //region all variable

    //region dataBind variable

    val xx = ObservableField<String>()

    //endregion

    //region declare variable



    //endregion

    //endregion
}

class ${NAME}Factory(private val mView: ${LINK_NAME}Activity, private val datamanagerHelper: DatamanagerHelper)
    : ViewModelProvider.NewInstanceFactory() {

    override fun <T : ViewModel?> create(modelClass: Class<T>): T {
        if (modelClass.isAssignableFrom(${NAME}::class.java)) {
            return ${NAME}(datamanagerHelper, mView) as T
        }
        throw IllegalArgumentException("Unknown ViewModel class")
    }
}