package ${PACKAGE_NAME}

import android.os.Bundle
import androidx.fragment.app.Fragment
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.R
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.databinding.Fragment${LINK_NAME}Binding
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.ui.${PRE_PATH}.domain.${LINK_NAME}ViewModel
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.ui.base.BaseFragment
import ${COMPANY_NAME}.${THIS_PROJECT_NAME}.ui.base.BaseVmFactoryBean

class ${NAME} : BaseFragment<Fragment${LINK_NAME}Binding, ${LINK_NAME}ViewModel>(){

    //region callback

    override fun initInject() = getFragmentComponent().inject(this)

    override fun getVmFactoryBean() = BaseVmFactoryBean(R.layout.fragment_${LAYOUT_NAME}, ${LINK_NAME}ViewModel::class.java, ${LINK_NAME}ViewModelFactory(this, datamanagerHelper))

    override fun initView() {
        mBinding.vm = vm
        val str1 = arguments?.getString(KEY_STR1)
    }

    override fun onResume() {
        super.onResume()
        vm.getHttpDatas()
    }

    //endregion

    //region declare variable

    companion object {
        private const val KEY_STR1 = "str1Key"

        fun newInstance(str1: String = ""): Fragment {
            val fragment = ${NAME}()
            val bundle = Bundle()
            bundle.apply {
                putString(KEY_STR1, str1)
            }
            fragment.arguments = bundle
            return fragment
        }
    }

    //endregion
}